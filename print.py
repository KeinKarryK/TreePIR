import matplotlib.pyplot as plt
import numpy as np

# 示例数据
categories = ['2^10', '2^14', '2^16', '2^18', '2^20']  # 横坐标标签
# 预处理计算开销(client+server) 单位: s
g1roup1 = [(132.307767868042+28.995752334594727)/1000,
(668.494462966919+651.1735916137695)/1000,
(1365.8251762390137+3094.4437980651855)/1000,
(3227.86021232605+13713.062524795532)/1000,
(7127.445220947266+62252.32720375061)/1000,
]
g1roup2 = [(137.78090476989746+63.001155853271484)/1000,
(633.8684558868408+1287.2531414031982)/1000,
(1526.247262954712+5908.477067947388)/1000,
(3330.6117057800293+26972.62215614319)/1000,
(7487.983703613281+120744.18950080872)/1000
]
g1roup3 = [(132.6007843017578+121.61540985107422)/1000,
(636.3637447357178+2552.1740913391113)/1000,
(1505.6257247924805+11854.81071472168)/1000,
(3254.7552585601807+53128.02314758301)/1000,
(7428.21478843689+237597.1553325653)/1000
]
# 预处理通信开销 单位 KB
g2roup1 = [(10240.0+10239.0)/1024,
(57335.0+57339.0)/1024,
(131056.0+131057.0)/1024,
(294876.0+294882.0)/1024,
(655276.0+655285.0)/1024,
]
g2roup2 = [(11261.0+11263.0)/1024,
(61434.0+61428.0)/1024,
(139244.0+139246.0)/1024,
(311255.0+311260.0)/1024,
(688044.0+688042.0)/1024
]
g2roup3 = [(11264.0+11264.0)/1024,
(61430.0+61435.0)/1024,
(139242.0+139241.0)/1024,
(311259.0+311256.0)/1024,
(688063.0+688048.0)/1024
]
# 在线查询计算开销 单位 ms
g3roup1 = [(649.0802764892578+1.500248908996582)/(2**5),
(53137.10641860962+21.132588386535645)/(2**7),
(478939.1632080078+80.05523681640625)/(2**8),
(4142385.1470947266+383.59832763671875)/(2**9),
(37451393.89038086+1600.2044677734375)/(2**10)  
]         # baseline
g3roup2 = [(82.04078674316406+0.9999275207519531)/(2**5),
(1048.3672618865967+10.47813892364502)/(2**7),
(3712.6922607421875+47.969818115234375)/(2**8),
(15368.408203125+96.04644775390625)/(2**9),
(64942.962646484375+640.3045654296875)/(2**10) 
]         # chunk
g3roup3 = [(193.04323196411133+77.0714282989502)/(2**5),
(3642.9877281188965+1674.5561361312866)/(2**7),
(17682.113647460938+7801.9561767578125)/(2**8),
(81941.34521484375+35140.350341796875)/(2**9),
(383606.26220703125+152453.94897460938)/(2**10) 
]       # TreePIR
# 在线查询query开销 单位B
g4roup1 = [7936/(2**5), 
130048/(2**7), 
522240/(2**8), 
2093056/(2**9), 
8380416/(2**10)
]
g4roup2 = [8192/(2**5), 
131072/(2**7), 
524288/(2**8), 
2097152/(2**9), 
8388608/(2**10)
]
g4roup3 = [12288/(2**5), 
65536/(2**7), 
147456/(2**8), 
327680/(2**9), 
720896/(2**10)
]
# 在线查询response开销 单位KB
g5roup1 = [2048/(2**5)/1024, 
8190/(2**7)/1024, 
16384/(2**8)/1024, 
32768/(2**9)/1024, 
65536/(2**10)/1024
]
g5roup2 = [67584/(2**5)/1024, 
1081344/(2**7)/1024, 
4325376/(2**8)/1024, 
17301504/(2**9)/1024, 
69206016/(2**10)/1024
]
g5roup3 = [65529/(2**5)/1024, 
1048434/(2**7)/1024, 
4193888/(2**8)/1024, 
16774528/(2**9)/1024, 
67099904/(2**10)/1024
]
# add 计算开销
g6roup1 = [(85.56318283081055+49.00622367858887)/(2**5), 
(478.00540924072266+551.0146617889404)/(2**7), 
(1134.2060565948486+2174.2770671844482)/(2**8), 
(2446.2406635284424+9016.315221786499)/(2**9), 
(5576.07626914978+38048.87390136719)/(2**10)
]
g6roup2 = [(118.58773231506348)/(2**5), 
(656.6283702850342+1.001119613647461)/(2**7), 
(1549.3710041046143+2.000093460083008)/(2**8), 
(3628.8084983825684+7.000446319580078)/(2**9), 
(8269.983291625977+26.389598846435547)/(2**10)
]
g6roup3 = [(122.00045585632324)/(2**5), 
(688.7111663818359+1.0006427764892578)/(2**7), 
(1628.72314453125+2.0003318786621094)/(2**8), 
(3703.6454677581787+6.997585296630859)/(2**9), 
(8211.91143989563+26.028156280517578)/(2**10)
]
# add 通信开销
g7roup1 = [(20479+42233)/(2**5), 
(114674+236512)/(2**7), 
(262101+540603)/(2**8), 
(589756+1216356)/(2**9), 
(1310561+2703065)/(2**10)
]
g7roup2 = [32, 32, 32, 32, 32]
g7roup3 = [32, 32, 32, 32, 32]
# 图形设置
bar_width = 0.25                   # 柱子宽度
x = np.arange(len(categories))     # 横坐标位置

# 创建图形
plt.figure(figsize=(10, 6))


# 绘制三组柱子
bars1 = plt.bar(x - bar_width, g7roup1, bar_width, label='Ma et al.', color='#1f77b4')
bars2 = plt.bar(x, g7roup2, bar_width, label='chunked scheme', color='#ff7f0e')
bars3 = plt.bar(x + bar_width, g7roup3, bar_width, label='Tree-chunked scheme', color='#2ca02c')

# 添加标签和标题
plt.xlabel('database size', fontsize=12)
plt.ylabel('communication(B)', fontsize=12)
plt.title('Add phase', fontsize=12, pad=20)
plt.xticks(x, categories)  # 设置横坐标标签
plt.legend(loc = 'upper left')

# 显示数据标签（可选）
for bars in [bars1, bars2, bars3]:
    for bar in bars:
        height = round(bar.get_height(),2)
        plt.text(bar.get_x() + bar.get_width()/2., height,
                 f'{height}',
                 ha='center', va='bottom', fontsize=9)

# 调整布局
plt.grid(axis='y', linestyle='--', alpha=0.5)
plt.tight_layout()
plt.show()